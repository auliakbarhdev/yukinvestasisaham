---
// Import the required modules
import { Image } from "astro:assets";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import { YouTube } from "astro-embed";
// Extract properties from Astro.props
const {
  title,
  subTitle,
  orderedList,
  list,
  btnExists,
  btnTitle,
  btnURL,
  single,
  youtubeId,
  imgOne,
  imgOneAlt,
  imgTwo,
  imgTwoAlt,
  imgThree,
  imgThreeAlt,
  imageOnBottom,
} = Astro.props;
// Define TypeScript interface for the properties
interface Props {
  title: string;
  subTitle?: string;
  orderedList?: boolean,
  list?: string[];
  btnExists?: boolean;
  btnTitle?: string;
  btnURL?: string;
  single?: boolean;
  youtubeId?: string;
  imgOne?: any;
  imgOneAlt?: any;
  imgTwo?: any;
  imgTwoAlt?: any;
  imgThree?: any;
  imgThreeAlt?: any;
  imageOnBottom?: boolean;
}

const isImageAvailable = Boolean(imgOne || (imgTwo && imgThree))
---
<!-- Root section of the component -->
<section
  class={`mx-auto max-w-[85rem] items-center gap-16 px-4 py-10 sm:px-6 lg:grid ${isImageAvailable && !imageOnBottom ? "lg:grid-cols-2" : "lg:grid-cols-1"} lg:px-8 lg:py-14 2xl:max-w-full`}
>
  <div>
    <!-- Title of the section -->
    <h2
      class="text-balance text-4xl font-extrabold tracking-tight text-neutral-800 dark:text-neutral-200"
    >
      {title}
    </h2>
    <!-- Subtitle of the section -->
    {subTitle && (
      <p
        class="my-4 max-w-prose text-pretty font-light text-neutral-600 dark:text-neutral-400 sm:text-lg"
      >
        {subTitle}
      </p>
    )}
    {
      list && (
        <div>
          <ol class="mt-3 grid space-y-3">
            {list.map((item, index) => (
              <li class={`${orderedList ? "list-decimal" : "list-disc"} list-outside gap-x-2 rounded-lg text-neutral-600 outline-none ring-zinc-500 transition duration-300 hover:text-neutral-500 focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-neutral-300 dark:focus:outline-none`}>
                {item}
              </li>
            ))}
          </ol>
        </div>
      )
    }
    <!-- Conditional rendering of the Primary Call-To-Action button if 'btnExists' is true -->
    {btnExists ?
      <PrimaryCTA title={btnTitle} url={btnURL} /> : null}
  </div>
  <!-- Conditionally render one or two images based on 'single' property -->
  {
    single ? (
      !!youtubeId ? (
          <!-- YouTube video embedding -->
          <div class="mt-2">
            <YouTube id={youtubeId} class="w-full rounded-lg" />
          </div>
        ) :
      imgOne ? (
          <div class="mt-2">
            <!-- Single image -->
            <Image
              class="w-full rounded-lg"
              src={imgOne}
              alt={imgOneAlt}
              format={"avif"}
            />
          </div>
        ) :
        <div />
    ) : (
      imgOne && imgTwo ? (
        <div class={`mt-2 grid grid-cols-1 ${imgThree !== undefined ? "md:grid-cols-3" : "md:grid-cols-2"} gap-4`}>
          <!-- First image in a two-image layout -->
          <Image
            class="w-full rounded-xl"
            src={imgOne}
            alt={imgOneAlt}
            draggable={"false"}
          />
          <!-- Second image in a two-image layout -->
          <Image
            class="w-full rounded-xl"
            src={imgTwo}
            alt={imgTwoAlt}
            draggable={"false"}
          />
          <!-- Third image in a two-image layout -->
          {imgThree &&
            <Image
              class="w-full rounded-xl"
              src={imgThree}
              alt={imgThreeAlt}
              draggable={"false"}
            />}
        </div>
      ) :
        <div />
    )
  }
</section>
